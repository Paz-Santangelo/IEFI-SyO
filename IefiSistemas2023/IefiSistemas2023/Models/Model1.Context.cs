//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace IefiSistemas2023.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class BichitosEntities : DbContext
    {
        public BichitosEntities()
            : base("name=BichitosEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Animale> Animales { get; set; }
        public virtual DbSet<Mascota> Mascotas { get; set; }
        public virtual DbSet<Raza> Razas { get; set; }
    
        public virtual int AgregarAnimal(string nombre_Animal, Nullable<System.DateTime> fechaBaja)
        {
            var nombre_AnimalParameter = nombre_Animal != null ?
                new ObjectParameter("Nombre_Animal", nombre_Animal) :
                new ObjectParameter("Nombre_Animal", typeof(string));
    
            var fechaBajaParameter = fechaBaja.HasValue ?
                new ObjectParameter("FechaBaja", fechaBaja) :
                new ObjectParameter("FechaBaja", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AgregarAnimal", nombre_AnimalParameter, fechaBajaParameter);
        }
    
        public virtual int AgregarMascota(string nombre_Mascota, string apodo, string nombre_Dueño, Nullable<System.DateTime> fechaBaja, string nombre_Raza, string nombre_Animal)
        {
            var nombre_MascotaParameter = nombre_Mascota != null ?
                new ObjectParameter("Nombre_Mascota", nombre_Mascota) :
                new ObjectParameter("Nombre_Mascota", typeof(string));
    
            var apodoParameter = apodo != null ?
                new ObjectParameter("Apodo", apodo) :
                new ObjectParameter("Apodo", typeof(string));
    
            var nombre_DueñoParameter = nombre_Dueño != null ?
                new ObjectParameter("Nombre_Dueño", nombre_Dueño) :
                new ObjectParameter("Nombre_Dueño", typeof(string));
    
            var fechaBajaParameter = fechaBaja.HasValue ?
                new ObjectParameter("FechaBaja", fechaBaja) :
                new ObjectParameter("FechaBaja", typeof(System.DateTime));
    
            var nombre_RazaParameter = nombre_Raza != null ?
                new ObjectParameter("Nombre_Raza", nombre_Raza) :
                new ObjectParameter("Nombre_Raza", typeof(string));
    
            var nombre_AnimalParameter = nombre_Animal != null ?
                new ObjectParameter("Nombre_Animal", nombre_Animal) :
                new ObjectParameter("Nombre_Animal", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AgregarMascota", nombre_MascotaParameter, apodoParameter, nombre_DueñoParameter, fechaBajaParameter, nombre_RazaParameter, nombre_AnimalParameter);
        }
    
        public virtual int AgregarRaza(string nombre_Raza, Nullable<System.DateTime> fechaBaja)
        {
            var nombre_RazaParameter = nombre_Raza != null ?
                new ObjectParameter("Nombre_Raza", nombre_Raza) :
                new ObjectParameter("Nombre_Raza", typeof(string));
    
            var fechaBajaParameter = fechaBaja.HasValue ?
                new ObjectParameter("FechaBaja", fechaBaja) :
                new ObjectParameter("FechaBaja", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AgregarRaza", nombre_RazaParameter, fechaBajaParameter);
        }
    
        public virtual int BorrarAnimal(string nombre_Animal)
        {
            var nombre_AnimalParameter = nombre_Animal != null ?
                new ObjectParameter("Nombre_Animal", nombre_Animal) :
                new ObjectParameter("Nombre_Animal", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("BorrarAnimal", nombre_AnimalParameter);
        }
    
        public virtual int BorrarMascota(string nombre_Mascota)
        {
            var nombre_MascotaParameter = nombre_Mascota != null ?
                new ObjectParameter("Nombre_Mascota", nombre_Mascota) :
                new ObjectParameter("Nombre_Mascota", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("BorrarMascota", nombre_MascotaParameter);
        }
    
        public virtual int BorrarRaza(Nullable<int> id_Raza, string nombre_Raza)
        {
            var id_RazaParameter = id_Raza.HasValue ?
                new ObjectParameter("Id_Raza", id_Raza) :
                new ObjectParameter("Id_Raza", typeof(int));
    
            var nombre_RazaParameter = nombre_Raza != null ?
                new ObjectParameter("Nombre_Raza", nombre_Raza) :
                new ObjectParameter("Nombre_Raza", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("BorrarRaza", id_RazaParameter, nombre_RazaParameter);
        }
    
        public virtual int ModificarAnimal(string nombre_Animal)
        {
            var nombre_AnimalParameter = nombre_Animal != null ?
                new ObjectParameter("Nombre_Animal", nombre_Animal) :
                new ObjectParameter("Nombre_Animal", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ModificarAnimal", nombre_AnimalParameter);
        }
    
        public virtual int ModificarMascota(Nullable<int> id_Mascota, string nombre_Mascota, string apodo, string nombre_Dueño)
        {
            var id_MascotaParameter = id_Mascota.HasValue ?
                new ObjectParameter("Id_Mascota", id_Mascota) :
                new ObjectParameter("Id_Mascota", typeof(int));
    
            var nombre_MascotaParameter = nombre_Mascota != null ?
                new ObjectParameter("Nombre_Mascota", nombre_Mascota) :
                new ObjectParameter("Nombre_Mascota", typeof(string));
    
            var apodoParameter = apodo != null ?
                new ObjectParameter("Apodo", apodo) :
                new ObjectParameter("Apodo", typeof(string));
    
            var nombre_DueñoParameter = nombre_Dueño != null ?
                new ObjectParameter("Nombre_Dueño", nombre_Dueño) :
                new ObjectParameter("Nombre_Dueño", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ModificarMascota", id_MascotaParameter, nombre_MascotaParameter, apodoParameter, nombre_DueñoParameter);
        }
    
        public virtual int ModificarRaza(Nullable<int> id_Raza, string nombre_Raza)
        {
            var id_RazaParameter = id_Raza.HasValue ?
                new ObjectParameter("Id_Raza", id_Raza) :
                new ObjectParameter("Id_Raza", typeof(int));
    
            var nombre_RazaParameter = nombre_Raza != null ?
                new ObjectParameter("Nombre_Raza", nombre_Raza) :
                new ObjectParameter("Nombre_Raza", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ModificarRaza", id_RazaParameter, nombre_RazaParameter);
        }
    
        public virtual ObjectResult<SeleccionarAnimal_Result> SeleccionarAnimal(string nombre_Animal, Nullable<int> id_Animal)
        {
            var nombre_AnimalParameter = nombre_Animal != null ?
                new ObjectParameter("Nombre_Animal", nombre_Animal) :
                new ObjectParameter("Nombre_Animal", typeof(string));
    
            var id_AnimalParameter = id_Animal.HasValue ?
                new ObjectParameter("Id_Animal", id_Animal) :
                new ObjectParameter("Id_Animal", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SeleccionarAnimal_Result>("SeleccionarAnimal", nombre_AnimalParameter, id_AnimalParameter);
        }
    
        public virtual ObjectResult<SeleccionarMascota_Result> SeleccionarMascota(Nullable<int> id_Mascota, string nombre_Mascota, string apodo, string nombre_Dueño, Nullable<int> id_Raza, string nombre_Raza, Nullable<int> id_Animal, string nombre_Animal)
        {
            var id_MascotaParameter = id_Mascota.HasValue ?
                new ObjectParameter("Id_Mascota", id_Mascota) :
                new ObjectParameter("Id_Mascota", typeof(int));
    
            var nombre_MascotaParameter = nombre_Mascota != null ?
                new ObjectParameter("Nombre_Mascota", nombre_Mascota) :
                new ObjectParameter("Nombre_Mascota", typeof(string));
    
            var apodoParameter = apodo != null ?
                new ObjectParameter("Apodo", apodo) :
                new ObjectParameter("Apodo", typeof(string));
    
            var nombre_DueñoParameter = nombre_Dueño != null ?
                new ObjectParameter("Nombre_Dueño", nombre_Dueño) :
                new ObjectParameter("Nombre_Dueño", typeof(string));
    
            var id_RazaParameter = id_Raza.HasValue ?
                new ObjectParameter("Id_Raza", id_Raza) :
                new ObjectParameter("Id_Raza", typeof(int));
    
            var nombre_RazaParameter = nombre_Raza != null ?
                new ObjectParameter("Nombre_Raza", nombre_Raza) :
                new ObjectParameter("Nombre_Raza", typeof(string));
    
            var id_AnimalParameter = id_Animal.HasValue ?
                new ObjectParameter("Id_Animal", id_Animal) :
                new ObjectParameter("Id_Animal", typeof(int));
    
            var nombre_AnimalParameter = nombre_Animal != null ?
                new ObjectParameter("Nombre_Animal", nombre_Animal) :
                new ObjectParameter("Nombre_Animal", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SeleccionarMascota_Result>("SeleccionarMascota", id_MascotaParameter, nombre_MascotaParameter, apodoParameter, nombre_DueñoParameter, id_RazaParameter, nombre_RazaParameter, id_AnimalParameter, nombre_AnimalParameter);
        }
    
        public virtual ObjectResult<SeleccionarRaza_Result> SeleccionarRaza(Nullable<int> id_Raza, string nombre_Raza, Nullable<int> id_Animal, string nombre_Animal)
        {
            var id_RazaParameter = id_Raza.HasValue ?
                new ObjectParameter("Id_Raza", id_Raza) :
                new ObjectParameter("Id_Raza", typeof(int));
    
            var nombre_RazaParameter = nombre_Raza != null ?
                new ObjectParameter("Nombre_Raza", nombre_Raza) :
                new ObjectParameter("Nombre_Raza", typeof(string));
    
            var id_AnimalParameter = id_Animal.HasValue ?
                new ObjectParameter("Id_Animal", id_Animal) :
                new ObjectParameter("Id_Animal", typeof(int));
    
            var nombre_AnimalParameter = nombre_Animal != null ?
                new ObjectParameter("Nombre_Animal", nombre_Animal) :
                new ObjectParameter("Nombre_Animal", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SeleccionarRaza_Result>("SeleccionarRaza", id_RazaParameter, nombre_RazaParameter, id_AnimalParameter, nombre_AnimalParameter);
        }
    }
}
